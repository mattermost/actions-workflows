on:
  workflow_call:
    inputs:
      artifacts:
        default: "*.tar.gz"
        description: |
          The path or files of artifacts to upload
        required: false
        type: string

      bucket:
        default: mattermost-plugins-delivery/release/
        description: |
          The S3 bucket full path to upload
        required: false
        type: string

      golang-version:
        default: "1.21"
        description: |
          Set the version for golang
        required: false
        type: string

      region:
        default: us-east-1
        description: |
          The AWS region for S3 bucket
        required: false
        type: string

permissions:
  contents: read

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: ci/setup
        uses: mattermost/actions/plugin-ci/setup@d5174b860704729f4c14ef8489ae075742bfa08a # v1.0.0
        with:
          golang-version: ${{ inputs.golang-version }}

      - name: ci/build
        env:
          MM_RUDDER_PLUGINS_PROD: ${{ secrets.MM_RUDDER_PLUGINS_PROD }}
          MM_RUDDER_CALLS_PROD: ${{ secrets.MM_RUDDER_CALLS_PROD }}
          MM_RUDDER_DATAPLANE_URL: ${{ secrets.MM_RUDDER_DATAPLANE_URL }}
        uses: mattermost/actions/plugin-ci/build@d5174b860704729f4c14ef8489ae075742bfa08a # v1.0.0

  release-s3:
    if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner == 'mattermost'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: ci/download-artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: dist
          path: dist

      - name: ci/prepare-artifact
        run: |
          mv *.tar.gz ${GITHUB_REPOSITORY#*/}-latest.tar.gz
          cp ${GITHUB_REPOSITORY#*/}-latest.tar.gz ${GITHUB_REPOSITORY#*/}-$GITHUB_REF_NAME.tar.gz
        working-directory: dist

      - name: ci/aws-configure
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/mattermost-release-plugin-store-role
          role-chaining: true # Enable chaining from existing credentials

      - name: ci/artifact-upload
        shell: bash
        run: |
          aws s3 cp ${GITHUB_REPOSITORY#*/}-latest.tar.gz s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
          aws s3 cp ${GITHUB_REPOSITORY#*/}-${GITHUB_REF_NAME}.tar.gz s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
        working-directory: dist

  release-github:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    needs: [release-s3]
    steps:
      - name: cd/checkout-repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
      - name: ci/download-artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: dist
          path: dist
      - name: ci/publish-release
        run: |
          gh release create "$GITHUB_REF_NAME" --title "$GITHUB_REF_NAME" --notes-file release-notes.md  *.tar.gz
        working-directory: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
